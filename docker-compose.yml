version: "3.4"

services:

  account-mysql:
    restart: always
    container_name: account-mysql
    image: 'mysql/mysql-server:5.7'
    environment:
      MYSQL_DATABASE: visma_github_comments
      MYSQL_ROOT_USERNAME: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_ROOT_USERNAME --password=$$MYSQL_ROOT_PASSWORD
      timeout: 2s
      retries: 2
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: account-mysql
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - account-mysql

  zookeeper:
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  kafka-manager:
    image: hlebalbau/kafka-manager:latest
    ports:
      - 9000:9000  # Expose Kafka Manager UI on host port 9000
    environment:
      ZK_HOSTS: "zookeeper:2181"  # Point Kafka Manager to your Zookeeper instance
    depends_on:
      - zookeeper
    restart: always  # Optional: Ensure Kafka Manager restarts automatically

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
        - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: bankAccount

  account-cmd:
    image: bank/account-cmd-service-api
    container_name: account-cmd-service
    build:
      context: ./account-cmd-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - kafka
      - mongo
      - configserver
      - discoveryserver

  account-qry:
    image: bank/account-qry-service-api
    container_name: account-qry-service
    build:
      context: ./account-qry-service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - kafka
      - account-mysql
      - configserver
      - discoveryserver
  keycloak:
    image: quay.io/keycloak/keycloak:18.0.2
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8181:8080"
    command:
      - start-dev

    
  configserver:
    image: bank/configserver
    container_name: configserver
    build:
      context: ./configserver
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - mongo

  discoveryserver:
    image: bank/discoveryserver
    container_name: discoveryserver
    build:
      context: ./discoveryserver
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - configserver

  api-gateway:
    image: bank/api-gateway
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - discoveryserver

  user-service:
    image: bank/user-service
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    depends_on:
      - configserver
      - discoveryserver
      - account-mysql
      - keycloak


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local